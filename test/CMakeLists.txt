add_library(obake_test STATIC catch_main.cpp)
target_compile_options(obake_test PRIVATE
  "$<$<CONFIG:Debug>:${OBAKE_CXX_FLAGS_DEBUG}>"
  "$<$<CONFIG:Release>:${OBAKE_CXX_FLAGS_RELEASE}>"
  "$<$<CONFIG:RelWithDebInfo>:${OBAKE_CXX_FLAGS_RELEASE}>"
  "$<$<CONFIG:MinSizeRel>:${OBAKE_CXX_FLAGS_RELEASE}>"
)
if(NOT CMAKE_CXX_STANDARD)
  # The user did not provide the CMAKE_CXX_STANDARD variable,
  # go with the default (C++17).
  set_property(TARGET obake_test PROPERTY CXX_STANDARD 17)
endif()
set_property(TARGET obake_test PROPERTY CXX_STANDARD_REQUIRED YES)
set_property(TARGET obake_test PROPERTY CXX_EXTENSIONS NO)

function(ADD_OBAKE_TESTCASE arg1)
  add_executable(${arg1} ${arg1}.cpp)
  target_link_libraries(${arg1} obake obake_test)
  target_compile_options(${arg1} PRIVATE
    "$<$<CONFIG:Debug>:${OBAKE_CXX_FLAGS_DEBUG}>"
    "$<$<CONFIG:Release>:${OBAKE_CXX_FLAGS_RELEASE}>"
    "$<$<CONFIG:RelWithDebInfo>:${OBAKE_CXX_FLAGS_RELEASE}>"
    "$<$<CONFIG:MinSizeRel>:${OBAKE_CXX_FLAGS_RELEASE}>"
  )
  if(NOT CMAKE_CXX_STANDARD)
    # The user did not provide the CMAKE_CXX_STANDARD variable,
    # go with the default (C++17).
    set_property(TARGET ${arg1} PROPERTY CXX_STANDARD 17)
  endif()
  set_property(TARGET ${arg1} PROPERTY CXX_STANDARD_REQUIRED YES)
  set_property(TARGET ${arg1} PROPERTY CXX_EXTENSIONS NO)
  add_test(${arg1} ${arg1})
endfunction()

ADD_OBAKE_TESTCASE(atomic_utils)
ADD_OBAKE_TESTCASE(byte_size)
ADD_OBAKE_TESTCASE(cf_cf_stream_insert)
ADD_OBAKE_TESTCASE(cf_cf_tex_stream_insert)
ADD_OBAKE_TESTCASE(exceptions)
ADD_OBAKE_TESTCASE(hash)
ADD_OBAKE_TESTCASE(hc)
ADD_OBAKE_TESTCASE(k_packing)
ADD_OBAKE_TESTCASE(key_key_is_compatible)
ADD_OBAKE_TESTCASE(key_key_is_one)
ADD_OBAKE_TESTCASE(key_key_degree)
ADD_OBAKE_TESTCASE(key_key_evaluate)
ADD_OBAKE_TESTCASE(key_key_is_zero)
ADD_OBAKE_TESTCASE(key_key_p_degree)
ADD_OBAKE_TESTCASE(key_key_merge_symbols)
ADD_OBAKE_TESTCASE(key_key_stream_insert)
ADD_OBAKE_TESTCASE(key_key_tex_stream_insert)
ADD_OBAKE_TESTCASE(key_key_trim)
ADD_OBAKE_TESTCASE(key_key_trim_identify)
ADD_OBAKE_TESTCASE(math_degree)
ADD_OBAKE_TESTCASE(math_diff)
ADD_OBAKE_TESTCASE(math_evaluate)
ADD_OBAKE_TESTCASE(math_fma3)
ADD_OBAKE_TESTCASE(math_integrate)
ADD_OBAKE_TESTCASE(math_is_zero)
ADD_OBAKE_TESTCASE(math_negate)
ADD_OBAKE_TESTCASE(math_p_degree)
ADD_OBAKE_TESTCASE(math_pow)
ADD_OBAKE_TESTCASE(math_safe_cast)
ADD_OBAKE_TESTCASE(math_safe_convert)
ADD_OBAKE_TESTCASE(math_subs)
ADD_OBAKE_TESTCASE(math_trim)
ADD_OBAKE_TESTCASE(math_truncate_degree)
ADD_OBAKE_TESTCASE(math_truncate_p_degree)
ADD_OBAKE_TESTCASE(polynomials_d_packed_monomial_00)
ADD_OBAKE_TESTCASE(polynomials_d_packed_monomial_01)
ADD_OBAKE_TESTCASE(polynomials_d_packed_monomial_02)
ADD_OBAKE_TESTCASE(polynomials_d_packed_monomial_03)
ADD_OBAKE_TESTCASE(polynomials_monomial_diff)
ADD_OBAKE_TESTCASE(polynomials_monomial_homomorphic_hash)
ADD_OBAKE_TESTCASE(polynomials_monomial_integrate)
ADD_OBAKE_TESTCASE(polynomials_monomial_mul)
ADD_OBAKE_TESTCASE(polynomials_monomial_pow)
ADD_OBAKE_TESTCASE(polynomials_monomial_subs)
ADD_OBAKE_TESTCASE(polynomials_monomial_range_overflow_check)
ADD_OBAKE_TESTCASE(polynomials_packed_monomial_00)
ADD_OBAKE_TESTCASE(polynomials_packed_monomial_01)
ADD_OBAKE_TESTCASE(polynomials_packed_monomial_02)
ADD_OBAKE_TESTCASE(polynomials_polynomial_00)
ADD_OBAKE_TESTCASE(polynomials_polynomial_01)
ADD_OBAKE_TESTCASE(polynomials_polynomial_02)
ADD_OBAKE_TESTCASE(polynomials_polynomial_03)
ADD_OBAKE_TESTCASE(polynomials_polynomial_04)
ADD_OBAKE_TESTCASE(polynomials_polynomial_05)
ADD_OBAKE_TESTCASE(power_series_truncated_power_series_00)
ADD_OBAKE_TESTCASE(ranges)
ADD_OBAKE_TESTCASE(s11n)
ADD_OBAKE_TESTCASE(series_00)
ADD_OBAKE_TESTCASE(series_01)
ADD_OBAKE_TESTCASE(series_02)
ADD_OBAKE_TESTCASE(series_03)
ADD_OBAKE_TESTCASE(series_04)
ADD_OBAKE_TESTCASE(series_05)
ADD_OBAKE_TESTCASE(series_06)
ADD_OBAKE_TESTCASE(symbols)
ADD_OBAKE_TESTCASE(fcast)
ADD_OBAKE_TESTCASE(limits)
ADD_OBAKE_TESTCASE(tex_stream_insert)
ADD_OBAKE_TESTCASE(to_string)
ADD_OBAKE_TESTCASE(type_traits)
ADD_OBAKE_TESTCASE(stacktrace)
ADD_OBAKE_TESTCASE(type_name)
ADD_OBAKE_TESTCASE(xoroshiro128_plus)
